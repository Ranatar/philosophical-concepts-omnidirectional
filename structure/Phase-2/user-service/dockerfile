# Stage 1: Build environment
FROM node:18-alpine AS base
WORKDIR /app
COPY package*.json ./

# Stage 2: Development dependencies
FROM base AS development
RUN npm ci
COPY . .
CMD ["npm", "run", "dev"]

# Stage 3: Production dependencies
FROM base AS production-deps
RUN npm ci --only=production

# Stage 4: Build
FROM base AS build
RUN npm ci
COPY . .
# If there were TypeScript or build steps, they would go here

# Stage 5: Production
FROM node:18-alpine AS production
WORKDIR /app

# Create non-root user
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

# Copy only what we need
COPY --from=production-deps --chown=appuser:appgroup /app/node_modules ./node_modules
COPY --from=build --chown=appuser:appgroup /app/src ./src
COPY --from=build --chown=appuser:appgroup /app/package*.json ./

# Set user
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD wget --quiet --tries=1 --spider http://localhost:3000/health || exit 1

# Expose port
EXPOSE 3000

# Start the application
CMD ["npm", "start"]
